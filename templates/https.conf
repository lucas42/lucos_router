server {
  listen 443 ssl;

  server_name {{domain}};

  ssl_certificate      /etc/letsencrypt/live/{{domain}}/fullchain.pem;
  ssl_certificate_key  /etc/letsencrypt/live/{{domain}}/privkey.pem;
  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  location / {
    # Pass the request to the appropriate backend.
    proxy_pass {{backend}};

    # Pass a bunch of headers to the downstream server, so they'll know what's going on.
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;

    # Backends are sent the correct host header above,
    # so they can handle redirects themselves if needed
    proxy_redirect     off;
  }

  # Specific path for websocket requests
  location /stream {
      ## Standard logic as above
      # Pass the request to the appropriate backend.
      proxy_pass {{backend}};

      # Pass a bunch of headers to the downstream server, so they'll know what's going on.
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;

      # Backends are sent the correct host header above,
      # so they can handle redirects themselves if needed
      proxy_redirect     off;

      ## Websocket specific logic
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
  }
}